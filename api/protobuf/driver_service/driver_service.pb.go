// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: driver_service/driver_service.proto

package driver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindDriverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       int64                  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindDriverRequest) Reset() {
	*x = FindDriverRequest{}
	mi := &file_driver_service_driver_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDriverRequest) ProtoMessage() {}

func (x *FindDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDriverRequest.ProtoReflect.Descriptor instead.
func (*FindDriverRequest) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{0}
}

func (x *FindDriverRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type FindDriverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        *Driver                `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindDriverResponse) Reset() {
	*x = FindDriverResponse{}
	mi := &file_driver_service_driver_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDriverResponse) ProtoMessage() {}

func (x *FindDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDriverResponse.ProtoReflect.Descriptor instead.
func (*FindDriverResponse) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{1}
}

func (x *FindDriverResponse) GetDriver() *Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *FindDriverResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FindDriverResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateDriverStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      int64                  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverStatusRequest) Reset() {
	*x = UpdateDriverStatusRequest{}
	mi := &file_driver_service_driver_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverStatusRequest) ProtoMessage() {}

func (x *UpdateDriverStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverStatusRequest) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDriverStatusRequest) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *UpdateDriverStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateDriverStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverStatusResponse) Reset() {
	*x = UpdateDriverStatusResponse{}
	mi := &file_driver_service_driver_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverStatusResponse) ProtoMessage() {}

func (x *UpdateDriverStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateDriverStatusResponse) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDriverStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetAvailableDriversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Drivers       []*Driver              `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableDriversResponse) Reset() {
	*x = GetAvailableDriversResponse{}
	mi := &file_driver_service_driver_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableDriversResponse) ProtoMessage() {}

func (x *GetAvailableDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableDriversResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableDriversResponse) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAvailableDriversResponse) GetDrivers() []*Driver {
	if x != nil {
		return x.Drivers
	}
	return nil
}

type CompleteOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      int64                  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	OrderId       int64                  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteOrderRequest) Reset() {
	*x = CompleteOrderRequest{}
	mi := &file_driver_service_driver_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteOrderRequest) ProtoMessage() {}

func (x *CompleteOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteOrderRequest.ProtoReflect.Descriptor instead.
func (*CompleteOrderRequest) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{5}
}

func (x *CompleteOrderRequest) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *CompleteOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type CompleteOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteOrderResponse) Reset() {
	*x = CompleteOrderResponse{}
	mi := &file_driver_service_driver_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteOrderResponse) ProtoMessage() {}

func (x *CompleteOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteOrderResponse.ProtoReflect.Descriptor instead.
func (*CompleteOrderResponse) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CompleteOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Driver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      int64                  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Vehicle       *Vehicle               `protobuf:"bytes,5,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_driver_service_driver_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{7}
}

func (x *Driver) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *Driver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Driver) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Driver) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Driver) GetVehicle() *Vehicle {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

type Vehicle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	LicensePlate  string                 `protobuf:"bytes,3,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	mi := &file_driver_service_driver_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_driver_service_driver_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_driver_service_driver_service_proto_rawDescGZIP(), []int{8}
}

func (x *Vehicle) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Vehicle) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

var File_driver_service_driver_service_proto protoreflect.FileDescriptor

const file_driver_service_driver_service_proto_rawDesc = "" +
	"\n" +
	"#driver_service/driver_service.proto\x12\x06driver\x1a\x1bgoogle/protobuf/empty.proto\".\n" +
	"\x11FindDriverRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\x03R\aorderId\"p\n" +
	"\x12FindDriverResponse\x12&\n" +
	"\x06driver\x18\x01 \x01(\v2\x0e.driver.DriverR\x06driver\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"P\n" +
	"\x19UpdateDriverStatusRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\x03R\bdriverId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"6\n" +
	"\x1aUpdateDriverStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"G\n" +
	"\x1bGetAvailableDriversResponse\x12(\n" +
	"\adrivers\x18\x01 \x03(\v2\x0e.driver.DriverR\adrivers\"N\n" +
	"\x14CompleteOrderRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\x03R\bdriverId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\x03R\aorderId\"K\n" +
	"\x15CompleteOrderResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x92\x01\n" +
	"\x06Driver\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\x03R\bdriverId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05phone\x18\x03 \x01(\tR\x05phone\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12)\n" +
	"\avehicle\x18\x05 \x01(\v2\x0f.driver.VehicleR\avehicle\"D\n" +
	"\aVehicle\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12#\n" +
	"\rlicense_plate\x18\x03 \x01(\tR\flicensePlate2\xdb\x02\n" +
	"\rDriverService\x12K\n" +
	"\x12FindSuitableDriver\x12\x19.driver.FindDriverRequest\x1a\x1a.driver.FindDriverResponse\x12[\n" +
	"\x12UpdateDriverStatus\x12!.driver.UpdateDriverStatusRequest\x1a\".driver.UpdateDriverStatusResponse\x12R\n" +
	"\x13GetAvailableDrivers\x12\x16.google.protobuf.Empty\x1a#.driver.GetAvailableDriversResponse\x12L\n" +
	"\rCompleteOrder\x12\x1c.driver.CompleteOrderRequest\x1a\x1d.driver.CompleteOrderResponseB\tZ\a/driverb\x06proto3"

var (
	file_driver_service_driver_service_proto_rawDescOnce sync.Once
	file_driver_service_driver_service_proto_rawDescData []byte
)

func file_driver_service_driver_service_proto_rawDescGZIP() []byte {
	file_driver_service_driver_service_proto_rawDescOnce.Do(func() {
		file_driver_service_driver_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_driver_service_driver_service_proto_rawDesc), len(file_driver_service_driver_service_proto_rawDesc)))
	})
	return file_driver_service_driver_service_proto_rawDescData
}

var file_driver_service_driver_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_driver_service_driver_service_proto_goTypes = []any{
	(*FindDriverRequest)(nil),           // 0: driver.FindDriverRequest
	(*FindDriverResponse)(nil),          // 1: driver.FindDriverResponse
	(*UpdateDriverStatusRequest)(nil),   // 2: driver.UpdateDriverStatusRequest
	(*UpdateDriverStatusResponse)(nil),  // 3: driver.UpdateDriverStatusResponse
	(*GetAvailableDriversResponse)(nil), // 4: driver.GetAvailableDriversResponse
	(*CompleteOrderRequest)(nil),        // 5: driver.CompleteOrderRequest
	(*CompleteOrderResponse)(nil),       // 6: driver.CompleteOrderResponse
	(*Driver)(nil),                      // 7: driver.Driver
	(*Vehicle)(nil),                     // 8: driver.Vehicle
	(*emptypb.Empty)(nil),               // 9: google.protobuf.Empty
}
var file_driver_service_driver_service_proto_depIdxs = []int32{
	7, // 0: driver.FindDriverResponse.driver:type_name -> driver.Driver
	7, // 1: driver.GetAvailableDriversResponse.drivers:type_name -> driver.Driver
	8, // 2: driver.Driver.vehicle:type_name -> driver.Vehicle
	0, // 3: driver.DriverService.FindSuitableDriver:input_type -> driver.FindDriverRequest
	2, // 4: driver.DriverService.UpdateDriverStatus:input_type -> driver.UpdateDriverStatusRequest
	9, // 5: driver.DriverService.GetAvailableDrivers:input_type -> google.protobuf.Empty
	5, // 6: driver.DriverService.CompleteOrder:input_type -> driver.CompleteOrderRequest
	1, // 7: driver.DriverService.FindSuitableDriver:output_type -> driver.FindDriverResponse
	3, // 8: driver.DriverService.UpdateDriverStatus:output_type -> driver.UpdateDriverStatusResponse
	4, // 9: driver.DriverService.GetAvailableDrivers:output_type -> driver.GetAvailableDriversResponse
	6, // 10: driver.DriverService.CompleteOrder:output_type -> driver.CompleteOrderResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_driver_service_driver_service_proto_init() }
func file_driver_service_driver_service_proto_init() {
	if File_driver_service_driver_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_driver_service_driver_service_proto_rawDesc), len(file_driver_service_driver_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_driver_service_driver_service_proto_goTypes,
		DependencyIndexes: file_driver_service_driver_service_proto_depIdxs,
		MessageInfos:      file_driver_service_driver_service_proto_msgTypes,
	}.Build()
	File_driver_service_driver_service_proto = out.File
	file_driver_service_driver_service_proto_goTypes = nil
	file_driver_service_driver_service_proto_depIdxs = nil
}
